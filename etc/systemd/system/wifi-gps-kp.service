[Unit]
Description=WiFi + GPSD(remote) + Kp Logger
# Assicurati che il device di rete esista prima di partire (anche USB hotplug)
Requires=sys-subsystem-net-devices-wlan-scan.device
After=sys-subsystem-net-devices-wlan-scan.device
Wants=network-online.target
After=network-online.target

[Service]
Type=simple

# Config a parte (opzionale)
# EnvironmentFile=/etc/default/wifi-gps-kp

Environment=GPSD_HOST=127.0.0.1
Environment=GPSD_PORT=2947
Environment=WLAN_IF=wlan-scan

# Attendi che l'interfaccia esista e diventi "UP" (max ~30s)
# Nota: per usare $WLAN_IF serve la shell
# Sync orario da internet (anche se differisce molto)
ExecStartPre=/bin/sh -c '/usr/sbin/ntpdate -u pool.ntp.org || true'
ExecStartPre=/bin/sh -c '/usr/sbin/rfkill unblock all'
ExecStartPre=/bin/sh -c '/sbin/ip link show wlan-scan >/dev/null 2>&1 || exit 1'
ExecStartPre=/bin/sh -c '/sbin/ip link set wlan-scan down || true'
ExecStartPre=/bin/sh -c '/sbin/iw reg set IT'
ExecStartPre=/bin/sh -c '/sbin/iw dev wlan-scan set type managed || true'
ExecStartPre=/bin/sh -c '/sbin/ip link set wlan-scan up || true'

# Avvio del logger
ExecStart=/home/raffaello/spacewx-venv/bin/python /home/raffaello/spacewx_logs/wifi_gps_kp_logger.py
WorkingDirectory=/home/raffaello
User=raffaello

# Cap di rete (se servono davvero al tuo script; altrimenti puoi toglierli)
AmbientCapabilities=CAP_NET_ADMIN CAP_NET_RAW
CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_RAW
NoNewPrivileges=yes

# Restart con backoff, evitare start-limit
Restart=always
RestartSec=5
#StartLimitIntervalSec=0

# Log puliti
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target

